'Wait two execution counts to make sure script executes
If Me.scrAssignIO.ExecutionCnt > 2 Then

'Declare variables

	DIM Datasource AS STRING;
	DIM AliasDB AS INDIRECT;
	DIM ﻿FA_ALM_ACT_CLOSE_NO_FB_Exist AS INTEGER;
	DIM FA_ALM_ACT_CLOSE_TORQUE_Exist AS INTEGER;
	DIM FA_ALM_ACT_FAULT_RELAY_Exist AS INTEGER;
	DIM FA_ALM_ACT_OPEN_NO_FB_Exist AS INTEGER;
	DIM FA_ALM_ACT_OPEN_TORQUE_Exist AS INTEGER;
	DIM FA_ALM_COMMON_DIGITAL_Exist AS INTEGER;
	DIM FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_FAN_DRIVE_END_VIBRATION_HIGH_Exist AS INTEGER;
	DIM FA_ALM_FAN_DRIVE_END_VIBRATION_LOW_Exist AS INTEGER;
	DIM FA_ALM_FAN_DRIVE_END_VIBRATION_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_FAN_FLOW_HIGH_Exist AS INTEGER;
	DIM FA_ALM_FAN_FLOW_LOW_Exist AS INTEGER;
	DIM FA_ALM_FAN_FLOW_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_FAN_NON_DRIVE_END_VIBRATION_HIGH_Exist AS INTEGER;
	DIM FA_ALM_FAN_NON_DRIVE_END_VIBRATION_LOW_Exist AS INTEGER;
	DIM FA_ALM_FAN_NON_DRIVE_END_VIBRATION_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_FAN_PRESSURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_FAN_PRESSURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_FAN_PRESSURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_FAN_SPEED_HIGH_Exist AS INTEGER;
	DIM FA_ALM_FAN_SPEED_LOW_Exist AS INTEGER;
	DIM FA_ALM_FAN_SPEED_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_FAN_VANE_POSITION_HIGH_Exist AS INTEGER;
	DIM FA_ALM_FAN_VANE_POSITION_LOW_Exist AS INTEGER;
	DIM FA_ALM_FAN_VANE_POSITION_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_MAIN_POWER_FAIL_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_AIR_TEMPERATURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_AIR_TEMPERATURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_AIR_TEMPERATURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_DRIVE_END_VIBRATION_HIGH_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_DRIVE_END_VIBRATION_LOW_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_DRIVE_END_VIBRATION_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_HIGH_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_LOW_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_SHAFT_DISPLACEMENT_HIGH_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_SHAFT_DISPLACEMENT_LOW_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_SHAFT_DISPLACEMENT_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_LOW_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_LOW_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_LOW_Exist AS INTEGER;
	DIM FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_OIL_COOLER_TEMPERATURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_OIL_COOLER_TEMPERATURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_OIL_COOLER_TEMPERATURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_OIL_FLOW_SWITCH_HIGH_Exist AS INTEGER;
	DIM FA_ALM_OIL_HEADER_TANK_LEVEL_HIGH_Exist AS INTEGER;
	DIM FA_ALM_OIL_HEADER_TANK_LEVEL_LOW_Exist AS INTEGER;
	DIM FA_ALM_OIL_HEADER_TANK_LEVEL_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_OIL_PRESSURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_OIL_PRESSURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_OIL_PRESSURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_OIL_SUMP_LEVEL_HIGH_Exist AS INTEGER;
	DIM FA_ALM_OIL_SUMP_LEVEL_LOW_Exist AS INTEGER;
	DIM FA_ALM_WATER_COOLER_TEMPERATURE_HIGH_Exist AS INTEGER;
	DIM FA_ALM_WATER_COOLER_TEMPERATURE_LOW_Exist AS INTEGER;
	DIM FA_ALM_WATER_COOLER_TEMPERATURE_TX_FAULT_Exist AS INTEGER;
	DIM FA_ALM_WATER_FLOW_SWITCH_HIGH_Exist AS INTEGER;


'Datasource is the input/output source you want to allocate to your field attribute
	Datasource = Me.PLCPath + "." + Me.Tagname;

'Create the alias list that is in the Device Integration object using the PLCPath uda to make it more dynamic
	AliasDB.bindto(Me.PLCPath + ".AliasDataBase");
	'The exist variables will return an integer value when the string exists in the alias database in the DI object
	'A string comparison is done between the Alias DB list and the Attribute to see if the attribute exists in the Alias DB
	'The StringChar function looks at the ASCII value for a quote which seperates the alias tags from each other in the aliasDB

	﻿FA_ALM_ACT_CLOSE_NO_FB_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".﻿FA_ALM_ACT_CLOSE_NO_FB" + StringChar(34)),1,0);
	FA_ALM_ACT_CLOSE_TORQUE_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_ACT_CLOSE_TORQUE" + StringChar(34)),1,0);
	FA_ALM_ACT_FAULT_RELAY_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_ACT_FAULT_RELAY" + StringChar(34)),1,0);
	FA_ALM_ACT_OPEN_NO_FB_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_ACT_OPEN_NO_FB" + StringChar(34)),1,0);
	FA_ALM_ACT_OPEN_TORQUE_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_ACT_OPEN_TORQUE" + StringChar(34)),1,0);
	FA_ALM_COMMON_DIGITAL_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_COMMON_DIGITAL" + StringChar(34)),1,0);
	FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_LOW" + StringChar(34)),1,0);
	FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_FAN_DRIVE_END_VIBRATION_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_DRIVE_END_VIBRATION_HIGH" + StringChar(34)),1,0);
	FA_ALM_FAN_DRIVE_END_VIBRATION_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_DRIVE_END_VIBRATION_LOW" + StringChar(34)),1,0);
	FA_ALM_FAN_DRIVE_END_VIBRATION_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_DRIVE_END_VIBRATION_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_FAN_FLOW_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_FLOW_HIGH" + StringChar(34)),1,0);
	FA_ALM_FAN_FLOW_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_FLOW_LOW" + StringChar(34)),1,0);
	FA_ALM_FAN_FLOW_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_FLOW_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_LOW" + StringChar(34)),1,0);
	FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_FAN_NON_DRIVE_END_VIBRATION_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_NON_DRIVE_END_VIBRATION_HIGH" + StringChar(34)),1,0);
	FA_ALM_FAN_NON_DRIVE_END_VIBRATION_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_NON_DRIVE_END_VIBRATION_LOW" + StringChar(34)),1,0);
	FA_ALM_FAN_NON_DRIVE_END_VIBRATION_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_NON_DRIVE_END_VIBRATION_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_FAN_PRESSURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_PRESSURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_FAN_PRESSURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_PRESSURE_LOW" + StringChar(34)),1,0);
	FA_ALM_FAN_PRESSURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_PRESSURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_FAN_SPEED_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_SPEED_HIGH" + StringChar(34)),1,0);
	FA_ALM_FAN_SPEED_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_SPEED_LOW" + StringChar(34)),1,0);
	FA_ALM_FAN_SPEED_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_SPEED_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_FAN_VANE_POSITION_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_VANE_POSITION_HIGH" + StringChar(34)),1,0);
	FA_ALM_FAN_VANE_POSITION_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_VANE_POSITION_LOW" + StringChar(34)),1,0);
	FA_ALM_FAN_VANE_POSITION_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_FAN_VANE_POSITION_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_MAIN_POWER_FAIL_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MAIN_POWER_FAIL" + StringChar(34)),1,0);
	FA_ALM_MOTOR_AIR_TEMPERATURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_AIR_TEMPERATURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_MOTOR_AIR_TEMPERATURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_AIR_TEMPERATURE_LOW" + StringChar(34)),1,0);
	FA_ALM_MOTOR_AIR_TEMPERATURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_AIR_TEMPERATURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_LOW" + StringChar(34)),1,0);
	FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_MOTOR_DRIVE_END_VIBRATION_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_DRIVE_END_VIBRATION_HIGH" + StringChar(34)),1,0);
	FA_ALM_MOTOR_DRIVE_END_VIBRATION_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_DRIVE_END_VIBRATION_LOW" + StringChar(34)),1,0);
	FA_ALM_MOTOR_DRIVE_END_VIBRATION_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_DRIVE_END_VIBRATION_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_LOW" + StringChar(34)),1,0);
	FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_HIGH" + StringChar(34)),1,0);
	FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_LOW" + StringChar(34)),1,0);
	FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_MOTOR_SHAFT_DISPLACEMENT_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_SHAFT_DISPLACEMENT_HIGH" + StringChar(34)),1,0);
	FA_ALM_MOTOR_SHAFT_DISPLACEMENT_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_SHAFT_DISPLACEMENT_LOW" + StringChar(34)),1,0);
	FA_ALM_MOTOR_SHAFT_DISPLACEMENT_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_SHAFT_DISPLACEMENT_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_HIGH" + StringChar(34)),1,0);
	FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_LOW" + StringChar(34)),1,0);
	FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_HIGH" + StringChar(34)),1,0);
	FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_LOW" + StringChar(34)),1,0);
	FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_HIGH" + StringChar(34)),1,0);
	FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_LOW" + StringChar(34)),1,0);
	FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_OIL_COOLER_TEMPERATURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_COOLER_TEMPERATURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_OIL_COOLER_TEMPERATURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_COOLER_TEMPERATURE_LOW" + StringChar(34)),1,0);
	FA_ALM_OIL_COOLER_TEMPERATURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_COOLER_TEMPERATURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_LOW" + StringChar(34)),1,0);
	FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_OIL_FLOW_SWITCH_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_FLOW_SWITCH_HIGH" + StringChar(34)),1,0);
	FA_ALM_OIL_HEADER_TANK_LEVEL_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_HEADER_TANK_LEVEL_HIGH" + StringChar(34)),1,0);
	FA_ALM_OIL_HEADER_TANK_LEVEL_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_HEADER_TANK_LEVEL_LOW" + StringChar(34)),1,0);
	FA_ALM_OIL_HEADER_TANK_LEVEL_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_HEADER_TANK_LEVEL_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_OIL_PRESSURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_PRESSURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_OIL_PRESSURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_PRESSURE_LOW" + StringChar(34)),1,0);
	FA_ALM_OIL_PRESSURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_PRESSURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_OIL_SUMP_LEVEL_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_SUMP_LEVEL_HIGH" + StringChar(34)),1,0);
	FA_ALM_OIL_SUMP_LEVEL_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_OIL_SUMP_LEVEL_LOW" + StringChar(34)),1,0);
	FA_ALM_WATER_COOLER_TEMPERATURE_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_WATER_COOLER_TEMPERATURE_HIGH" + StringChar(34)),1,0);
	FA_ALM_WATER_COOLER_TEMPERATURE_LOW_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_WATER_COOLER_TEMPERATURE_LOW" + StringChar(34)),1,0);
	FA_ALM_WATER_COOLER_TEMPERATURE_TX_FAULT_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_WATER_COOLER_TEMPERATURE_TX_FAULT" + StringChar(34)),1,0);
	FA_ALM_WATER_FLOW_SWITCH_HIGH_Exist = StringInString(AliasDB, (StringChar(34) + Me.TagName + ".FA_ALM_WATER_FLOW_SWITCH_HIGH" + StringChar(34)),1,0);


	'The value is then assigned to the DIN Field Attribute input source or unassigned if it is not in the AliasDB
	If ﻿FA_ALM_ACT_CLOSE_NO_FB_Exist > 0 Then
		Me.﻿FA_ALM_ACT_CLOSE_NO_FB.Input.InputSource = Datasource + ".﻿FA_ALM_ACT_CLOSE_NO_FB";
	Else
		Me.﻿FA_ALM_ACT_CLOSE_NO_FB.Input.InputSource = "---";
	EndIf;

	If FA_ALM_ACT_CLOSE_TORQUE_Exist > 0 Then
		Me.FA_ALM_ACT_CLOSE_TORQUE.Input.InputSource = Datasource + ".FA_ALM_ACT_CLOSE_TORQUE";
	Else
		Me.FA_ALM_ACT_CLOSE_TORQUE.Input.InputSource = "---";
	EndIf;

	If FA_ALM_ACT_FAULT_RELAY_Exist > 0 Then
		Me.FA_ALM_ACT_FAULT_RELAY.Input.InputSource = Datasource + ".FA_ALM_ACT_FAULT_RELAY";
	Else
		Me.FA_ALM_ACT_FAULT_RELAY.Input.InputSource = "---";
	EndIf;

	If FA_ALM_ACT_OPEN_NO_FB_Exist > 0 Then
		Me.FA_ALM_ACT_OPEN_NO_FB.Input.InputSource = Datasource + ".FA_ALM_ACT_OPEN_NO_FB";
	Else
		Me.FA_ALM_ACT_OPEN_NO_FB.Input.InputSource = "---";
	EndIf;

	If FA_ALM_ACT_OPEN_TORQUE_Exist > 0 Then
		Me.FA_ALM_ACT_OPEN_TORQUE.Input.InputSource = Datasource + ".FA_ALM_ACT_OPEN_TORQUE";
	Else
		Me.FA_ALM_ACT_OPEN_TORQUE.Input.InputSource = "---";
	EndIf;

	If FA_ALM_COMMON_DIGITAL_Exist > 0 Then
		Me.FA_ALM_COMMON_DIGITAL.Input.InputSource = Datasource + ".FA_ALM_COMMON_DIGITAL";
	Else
		Me.FA_ALM_COMMON_DIGITAL.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist > 0 Then
		Me.FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_HIGH";
	Else
		Me.FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist > 0 Then
		Me.FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_LOW.Input.InputSource = Datasource + ".FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_LOW";
	Else
		Me.FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT";
	Else
		Me.FA_ALM_FAN_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_DRIVE_END_VIBRATION_HIGH_Exist > 0 Then
		Me.FA_ALM_FAN_DRIVE_END_VIBRATION_HIGH.Input.InputSource = Datasource + ".FA_ALM_FAN_DRIVE_END_VIBRATION_HIGH";
	Else
		Me.FA_ALM_FAN_DRIVE_END_VIBRATION_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_DRIVE_END_VIBRATION_LOW_Exist > 0 Then
		Me.FA_ALM_FAN_DRIVE_END_VIBRATION_LOW.Input.InputSource = Datasource + ".FA_ALM_FAN_DRIVE_END_VIBRATION_LOW";
	Else
		Me.FA_ALM_FAN_DRIVE_END_VIBRATION_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_DRIVE_END_VIBRATION_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_FAN_DRIVE_END_VIBRATION_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_FAN_DRIVE_END_VIBRATION_TX_FAULT";
	Else
		Me.FA_ALM_FAN_DRIVE_END_VIBRATION_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_FLOW_HIGH_Exist > 0 Then
		Me.FA_ALM_FAN_FLOW_HIGH.Input.InputSource = Datasource + ".FA_ALM_FAN_FLOW_HIGH";
	Else
		Me.FA_ALM_FAN_FLOW_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_FLOW_LOW_Exist > 0 Then
		Me.FA_ALM_FAN_FLOW_LOW.Input.InputSource = Datasource + ".FA_ALM_FAN_FLOW_LOW";
	Else
		Me.FA_ALM_FAN_FLOW_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_FLOW_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_FAN_FLOW_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_FAN_FLOW_TX_FAULT";
	Else
		Me.FA_ALM_FAN_FLOW_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist > 0 Then
		Me.FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH";
	Else
		Me.FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist > 0 Then
		Me.FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_LOW.Input.InputSource = Datasource + ".FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_LOW";
	Else
		Me.FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT";
	Else
		Me.FA_ALM_FAN_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_NON_DRIVE_END_VIBRATION_HIGH_Exist > 0 Then
		Me.FA_ALM_FAN_NON_DRIVE_END_VIBRATION_HIGH.Input.InputSource = Datasource + ".FA_ALM_FAN_NON_DRIVE_END_VIBRATION_HIGH";
	Else
		Me.FA_ALM_FAN_NON_DRIVE_END_VIBRATION_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_NON_DRIVE_END_VIBRATION_LOW_Exist > 0 Then
		Me.FA_ALM_FAN_NON_DRIVE_END_VIBRATION_LOW.Input.InputSource = Datasource + ".FA_ALM_FAN_NON_DRIVE_END_VIBRATION_LOW";
	Else
		Me.FA_ALM_FAN_NON_DRIVE_END_VIBRATION_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_NON_DRIVE_END_VIBRATION_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_FAN_NON_DRIVE_END_VIBRATION_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_FAN_NON_DRIVE_END_VIBRATION_TX_FAULT";
	Else
		Me.FA_ALM_FAN_NON_DRIVE_END_VIBRATION_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_PRESSURE_HIGH_Exist > 0 Then
		Me.FA_ALM_FAN_PRESSURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_FAN_PRESSURE_HIGH";
	Else
		Me.FA_ALM_FAN_PRESSURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_PRESSURE_LOW_Exist > 0 Then
		Me.FA_ALM_FAN_PRESSURE_LOW.Input.InputSource = Datasource + ".FA_ALM_FAN_PRESSURE_LOW";
	Else
		Me.FA_ALM_FAN_PRESSURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_PRESSURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_FAN_PRESSURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_FAN_PRESSURE_TX_FAULT";
	Else
		Me.FA_ALM_FAN_PRESSURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_SPEED_HIGH_Exist > 0 Then
		Me.FA_ALM_FAN_SPEED_HIGH.Input.InputSource = Datasource + ".FA_ALM_FAN_SPEED_HIGH";
	Else
		Me.FA_ALM_FAN_SPEED_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_SPEED_LOW_Exist > 0 Then
		Me.FA_ALM_FAN_SPEED_LOW.Input.InputSource = Datasource + ".FA_ALM_FAN_SPEED_LOW";
	Else
		Me.FA_ALM_FAN_SPEED_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_SPEED_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_FAN_SPEED_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_FAN_SPEED_TX_FAULT";
	Else
		Me.FA_ALM_FAN_SPEED_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_VANE_POSITION_HIGH_Exist > 0 Then
		Me.FA_ALM_FAN_VANE_POSITION_HIGH.Input.InputSource = Datasource + ".FA_ALM_FAN_VANE_POSITION_HIGH";
	Else
		Me.FA_ALM_FAN_VANE_POSITION_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_VANE_POSITION_LOW_Exist > 0 Then
		Me.FA_ALM_FAN_VANE_POSITION_LOW.Input.InputSource = Datasource + ".FA_ALM_FAN_VANE_POSITION_LOW";
	Else
		Me.FA_ALM_FAN_VANE_POSITION_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_FAN_VANE_POSITION_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_FAN_VANE_POSITION_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_FAN_VANE_POSITION_TX_FAULT";
	Else
		Me.FA_ALM_FAN_VANE_POSITION_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MAIN_POWER_FAIL_Exist > 0 Then
		Me.FA_ALM_MAIN_POWER_FAIL.Input.InputSource = Datasource + ".FA_ALM_MAIN_POWER_FAIL";
	Else
		Me.FA_ALM_MAIN_POWER_FAIL.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_AIR_TEMPERATURE_HIGH_Exist > 0 Then
		Me.FA_ALM_MOTOR_AIR_TEMPERATURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_MOTOR_AIR_TEMPERATURE_HIGH";
	Else
		Me.FA_ALM_MOTOR_AIR_TEMPERATURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_AIR_TEMPERATURE_LOW_Exist > 0 Then
		Me.FA_ALM_MOTOR_AIR_TEMPERATURE_LOW.Input.InputSource = Datasource + ".FA_ALM_MOTOR_AIR_TEMPERATURE_LOW";
	Else
		Me.FA_ALM_MOTOR_AIR_TEMPERATURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_AIR_TEMPERATURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_MOTOR_AIR_TEMPERATURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_MOTOR_AIR_TEMPERATURE_TX_FAULT";
	Else
		Me.FA_ALM_MOTOR_AIR_TEMPERATURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist > 0 Then
		Me.FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_HIGH";
	Else
		Me.FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist > 0 Then
		Me.FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_LOW.Input.InputSource = Datasource + ".FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_LOW";
	Else
		Me.FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT";
	Else
		Me.FA_ALM_MOTOR_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_DRIVE_END_VIBRATION_HIGH_Exist > 0 Then
		Me.FA_ALM_MOTOR_DRIVE_END_VIBRATION_HIGH.Input.InputSource = Datasource + ".FA_ALM_MOTOR_DRIVE_END_VIBRATION_HIGH";
	Else
		Me.FA_ALM_MOTOR_DRIVE_END_VIBRATION_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_DRIVE_END_VIBRATION_LOW_Exist > 0 Then
		Me.FA_ALM_MOTOR_DRIVE_END_VIBRATION_LOW.Input.InputSource = Datasource + ".FA_ALM_MOTOR_DRIVE_END_VIBRATION_LOW";
	Else
		Me.FA_ALM_MOTOR_DRIVE_END_VIBRATION_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_DRIVE_END_VIBRATION_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_MOTOR_DRIVE_END_VIBRATION_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_MOTOR_DRIVE_END_VIBRATION_TX_FAULT";
	Else
		Me.FA_ALM_MOTOR_DRIVE_END_VIBRATION_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH_Exist > 0 Then
		Me.FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH";
	Else
		Me.FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_LOW_Exist > 0 Then
		Me.FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_LOW.Input.InputSource = Datasource + ".FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_LOW";
	Else
		Me.FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT";
	Else
		Me.FA_ALM_MOTOR_NON_DRIVE_END_BEARING_TEMPERATURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_HIGH_Exist > 0 Then
		Me.FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_HIGH.Input.InputSource = Datasource + ".FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_HIGH";
	Else
		Me.FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_LOW_Exist > 0 Then
		Me.FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_LOW.Input.InputSource = Datasource + ".FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_LOW";
	Else
		Me.FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_TX_FAULT";
	Else
		Me.FA_ALM_MOTOR_NON_DRIVE_END_VIBRATION_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_SHAFT_DISPLACEMENT_HIGH_Exist > 0 Then
		Me.FA_ALM_MOTOR_SHAFT_DISPLACEMENT_HIGH.Input.InputSource = Datasource + ".FA_ALM_MOTOR_SHAFT_DISPLACEMENT_HIGH";
	Else
		Me.FA_ALM_MOTOR_SHAFT_DISPLACEMENT_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_SHAFT_DISPLACEMENT_LOW_Exist > 0 Then
		Me.FA_ALM_MOTOR_SHAFT_DISPLACEMENT_LOW.Input.InputSource = Datasource + ".FA_ALM_MOTOR_SHAFT_DISPLACEMENT_LOW";
	Else
		Me.FA_ALM_MOTOR_SHAFT_DISPLACEMENT_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_SHAFT_DISPLACEMENT_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_MOTOR_SHAFT_DISPLACEMENT_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_MOTOR_SHAFT_DISPLACEMENT_TX_FAULT";
	Else
		Me.FA_ALM_MOTOR_SHAFT_DISPLACEMENT_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_HIGH_Exist > 0 Then
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_HIGH.Input.InputSource = Datasource + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_HIGH";
	Else
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_LOW_Exist > 0 Then
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_LOW.Input.InputSource = Datasource + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_LOW";
	Else
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_TX_FAULT";
	Else
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_BLUE_PHASE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_HIGH_Exist > 0 Then
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_HIGH.Input.InputSource = Datasource + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_HIGH";
	Else
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_LOW_Exist > 0 Then
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_LOW.Input.InputSource = Datasource + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_LOW";
	Else
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_TX_FAULT";
	Else
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_RED_PHASE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_HIGH_Exist > 0 Then
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_HIGH.Input.InputSource = Datasource + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_HIGH";
	Else
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_LOW_Exist > 0 Then
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_LOW.Input.InputSource = Datasource + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_LOW";
	Else
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_TX_FAULT";
	Else
		Me.FA_ALM_MOTOR_WINDING_TEMPERATURE_WHITE_PHASE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_COOLER_TEMPERATURE_HIGH_Exist > 0 Then
		Me.FA_ALM_OIL_COOLER_TEMPERATURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_OIL_COOLER_TEMPERATURE_HIGH";
	Else
		Me.FA_ALM_OIL_COOLER_TEMPERATURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_COOLER_TEMPERATURE_LOW_Exist > 0 Then
		Me.FA_ALM_OIL_COOLER_TEMPERATURE_LOW.Input.InputSource = Datasource + ".FA_ALM_OIL_COOLER_TEMPERATURE_LOW";
	Else
		Me.FA_ALM_OIL_COOLER_TEMPERATURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_COOLER_TEMPERATURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_OIL_COOLER_TEMPERATURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_OIL_COOLER_TEMPERATURE_TX_FAULT";
	Else
		Me.FA_ALM_OIL_COOLER_TEMPERATURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_HIGH_Exist > 0 Then
		Me.FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_HIGH";
	Else
		Me.FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_LOW_Exist > 0 Then
		Me.FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_LOW.Input.InputSource = Datasource + ".FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_LOW";
	Else
		Me.FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_TX_FAULT";
	Else
		Me.FA_ALM_OIL_FILTER_DIFFERENTIAL_PRESSURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_FLOW_SWITCH_HIGH_Exist > 0 Then
		Me.FA_ALM_OIL_FLOW_SWITCH_HIGH.Input.InputSource = Datasource + ".FA_ALM_OIL_FLOW_SWITCH_HIGH";
	Else
		Me.FA_ALM_OIL_FLOW_SWITCH_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_HEADER_TANK_LEVEL_HIGH_Exist > 0 Then
		Me.FA_ALM_OIL_HEADER_TANK_LEVEL_HIGH.Input.InputSource = Datasource + ".FA_ALM_OIL_HEADER_TANK_LEVEL_HIGH";
	Else
		Me.FA_ALM_OIL_HEADER_TANK_LEVEL_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_HEADER_TANK_LEVEL_LOW_Exist > 0 Then
		Me.FA_ALM_OIL_HEADER_TANK_LEVEL_LOW.Input.InputSource = Datasource + ".FA_ALM_OIL_HEADER_TANK_LEVEL_LOW";
	Else
		Me.FA_ALM_OIL_HEADER_TANK_LEVEL_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_HEADER_TANK_LEVEL_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_OIL_HEADER_TANK_LEVEL_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_OIL_HEADER_TANK_LEVEL_TX_FAULT";
	Else
		Me.FA_ALM_OIL_HEADER_TANK_LEVEL_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_PRESSURE_HIGH_Exist > 0 Then
		Me.FA_ALM_OIL_PRESSURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_OIL_PRESSURE_HIGH";
	Else
		Me.FA_ALM_OIL_PRESSURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_PRESSURE_LOW_Exist > 0 Then
		Me.FA_ALM_OIL_PRESSURE_LOW.Input.InputSource = Datasource + ".FA_ALM_OIL_PRESSURE_LOW";
	Else
		Me.FA_ALM_OIL_PRESSURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_PRESSURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_OIL_PRESSURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_OIL_PRESSURE_TX_FAULT";
	Else
		Me.FA_ALM_OIL_PRESSURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_SUMP_LEVEL_HIGH_Exist > 0 Then
		Me.FA_ALM_OIL_SUMP_LEVEL_HIGH.Input.InputSource = Datasource + ".FA_ALM_OIL_SUMP_LEVEL_HIGH";
	Else
		Me.FA_ALM_OIL_SUMP_LEVEL_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_OIL_SUMP_LEVEL_LOW_Exist > 0 Then
		Me.FA_ALM_OIL_SUMP_LEVEL_LOW.Input.InputSource = Datasource + ".FA_ALM_OIL_SUMP_LEVEL_LOW";
	Else
		Me.FA_ALM_OIL_SUMP_LEVEL_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_WATER_COOLER_TEMPERATURE_HIGH_Exist > 0 Then
		Me.FA_ALM_WATER_COOLER_TEMPERATURE_HIGH.Input.InputSource = Datasource + ".FA_ALM_WATER_COOLER_TEMPERATURE_HIGH";
	Else
		Me.FA_ALM_WATER_COOLER_TEMPERATURE_HIGH.Input.InputSource = "---";
	EndIf;

	If FA_ALM_WATER_COOLER_TEMPERATURE_LOW_Exist > 0 Then
		Me.FA_ALM_WATER_COOLER_TEMPERATURE_LOW.Input.InputSource = Datasource + ".FA_ALM_WATER_COOLER_TEMPERATURE_LOW";
	Else
		Me.FA_ALM_WATER_COOLER_TEMPERATURE_LOW.Input.InputSource = "---";
	EndIf;

	If FA_ALM_WATER_COOLER_TEMPERATURE_TX_FAULT_Exist > 0 Then
		Me.FA_ALM_WATER_COOLER_TEMPERATURE_TX_FAULT.Input.InputSource = Datasource + ".FA_ALM_WATER_COOLER_TEMPERATURE_TX_FAULT";
	Else
		Me.FA_ALM_WATER_COOLER_TEMPERATURE_TX_FAULT.Input.InputSource = "---";
	EndIf;

	If FA_ALM_WATER_FLOW_SWITCH_HIGH_Exist > 0 Then
		Me.FA_ALM_WATER_FLOW_SWITCH_HIGH.Input.InputSource = Datasource + ".FA_ALM_WATER_FLOW_SWITCH_HIGH";
	Else
		Me.FA_ALM_WATER_FLOW_SWITCH_HIGH.Input.InputSource = "---";
	EndIf;


'The script is then finished by setting the trigger bit to true and it will stop executing
    Me.AssignIOCmd = True;

EndIf;

'A Log Message flag is added to see if the script executed in the SMC - This can be excluded and is for troubleshooting
'LogMessage (Me.Tagname + "Finished");

